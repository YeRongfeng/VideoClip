name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: VideoClip-Windows
            executable_ext: .exe
          - os: ubuntu-latest
            artifact_name: VideoClip-Linux
            executable_ext: ''

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk ffmpeg

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install ffmpeg

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync
        uv add pyinstaller

    - name: Build executable
      run: |
        uv run pyinstaller --name=VideoClip --onefile --windowed --add-data="*.py:." main.py

    - name: Create distribution package (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir VideoClip-Windows
        copy dist\VideoClip.exe VideoClip-Windows\
        copy README.md VideoClip-Windows\
        echo "VideoClip - 视频裁切工具" > VideoClip-Windows\README.txt
        echo "运行 VideoClip.exe 启动应用程序" >> VideoClip-Windows\README.txt
        echo "系统要求: Windows 10 或更高版本" >> VideoClip-Windows\README.txt
        powershell Compress-Archive VideoClip-Windows VideoClip-Windows.zip

    - name: Create distribution package (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir VideoClip-Linux
        cp dist/VideoClip VideoClip-Linux/
        cp README.md VideoClip-Linux/
        echo "VideoClip - 视频裁切工具" > VideoClip-Linux/README.txt
        echo "运行 ./VideoClip 启动应用程序" >> VideoClip-Linux/README.txt
        echo "系统要求: Ubuntu 18.04+ 或其他现代Linux发行版" >> VideoClip-Linux/README.txt
        chmod +x VideoClip-Linux/VideoClip
        tar -czf VideoClip-Linux.tar.gz VideoClip-Linux/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          VideoClip-Windows.zip
          VideoClip-Linux.tar.gz
        if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Get version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Prepare release files
      run: |
        ls -la
        find . -name "*.zip" -o -name "*.tar.gz"
        # 移动文件到当前目录以便上传
        if [ -f "VideoClip-Windows/VideoClip-Windows.zip" ]; then
          mv VideoClip-Windows/VideoClip-Windows.zip ./
        fi
        if [ -f "VideoClip-Linux/VideoClip-Linux.tar.gz" ]; then
          mv VideoClip-Linux/VideoClip-Linux.tar.gz ./
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: VideoClip ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## VideoClip ${{ steps.get_version.outputs.VERSION }}
          
          🎉 **新版本发布！** 一个功能强大的视频裁切和剪辑工具
          
          ### ✨ 主要功能
          - 🎬 **空间裁切**: 通过鼠标拖拽选择裁切区域
          - ⏱️ **时间剪辑**: 精确选择视频起始和结束时间
          - 🎥 **实时预览**: 支持播放控制和逐帧预览
          - 📱 **用户友好**: 简洁直观的图形界面
          - 🔄 **智能缩放**: 自动适应窗口大小
          
          ### 📦 下载说明
          - **Windows 用户**: 下载 `VideoClip-Windows.zip`，解压后运行 `VideoClip.exe`
          - **Linux 用户**: 下载 `VideoClip-Linux.tar.gz`，解压后运行 `./VideoClip`
          
          ### 🔧 系统要求
          - 支持的操作系统: Windows 10+, Ubuntu 18.04+
          - 支持的视频格式: MP4, AVI, MOV, MKV, FLV
          - 内存: 建议 2GB+ RAM
          
          ### 🚀 快速开始
          1. 下载对应平台的压缩包
          2. 解压到任意目录
          3. 运行可执行文件
          4. 选择视频文件开始裁切！
          
          ---
          
          💡 **提示**: 如果遇到问题，请查看 [使用文档](https://github.com/YeRongfeng/VideoClip#使用方法) 或提交 [Issue](https://github.com/YeRongfeng/VideoClip/issues)
        files: |
          VideoClip-Windows.zip
          VideoClip-Linux.tar.gz
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
