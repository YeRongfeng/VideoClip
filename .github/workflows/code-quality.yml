name: Code Quality

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # 每周日运行一次代码质量检查
    - cron: '0 0 * * 0'

jobs:
  code-quality:
    # 跳过代码质量检查的条件 - 只对质量和全局跳过关键字敏感
    if: >
      github.event_name == 'schedule' || 
      (github.event_name != 'schedule' && 
       !contains(github.event.head_commit.message, '[skip quality]') &&
       !contains(github.event.head_commit.message, '[no quality]') &&
       !contains(github.event.head_commit.message, '[skip lint]') &&
       !contains(github.event.head_commit.message, '[skip all]') &&
       !contains(github.event.head_commit.message, '[no automation]'))
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史以进行更好的分析

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run ruff linting
      run: |
        uv run ruff check . --output-format=github

    - name: Run ruff formatting check
      run: |
        uv run ruff format --check .

    - name: Run complexity analysis
      run: |
        uv add radon
        uv run radon cc . --min B

    - name: Run maintainability analysis
      run: |
        uv run radon mi . --min B

    - name: Check dependencies for known security vulnerabilities
      run: |
        uv add safety
        uv run safety check --json --output safety-report.json || true

    - name: Upload safety report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: safety-report
        path: safety-report.json

    - name: Generate dependency graph
      run: |
        uv add pipdeptree
        uv run pipdeptree --json > dependency-graph.json

    - name: Upload dependency graph
      uses: actions/upload-artifact@v4
      with:
        name: dependency-graph
        path: dependency-graph.json

  documentation:
    # 跳过文档检查的条件 - 与代码质量检查相同
    if: >
      github.event_name == 'schedule' || 
      (github.event_name != 'schedule' && 
       !contains(github.event.head_commit.message, '[skip quality]') &&
       !contains(github.event.head_commit.message, '[no quality]') &&
       !contains(github.event.head_commit.message, '[skip lint]') &&
       !contains(github.event.head_commit.message, '[skip all]') &&
       !contains(github.event.head_commit.message, '[no automation]'))
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Check docstring coverage
      run: |
        python scripts/check_docstrings.py

    - name: Validate README links
      run: |
        echo "README link validation skipped for now"
